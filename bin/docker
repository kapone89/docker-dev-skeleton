#!/bin/bash
set -euo pipefail

CMD="$1"
OPTIONS="${@:2}"
VOLUMES=( bcn-postgres-data )
COMPOSE_FILE="${BASH_SOURCE%/*}/../docker-compose.yml"
DUMPS_DIR="${BASH_SOURCE%/*}/../dumps"

case $CMD in

# run API server
server)
  docker-compose -f $COMPOSE_FILE up $OPTIONS bcndev-server
  ;;

# run other services and databases (like postgresql, mailcatcher, etc.)
services)
  docker-compose -f $COMPOSE_FILE up $OPTIONS bcndev-postgres bcndev-mailcatcher
  ;;

# run web (frontend)
web)
  docker-compose -f $COMPOSE_FILE up $OPTIONS bcndev-web
  ;;

# start all containers
start)
  docker-compose -f $COMPOSE_FILE up $OPTIONS
  ;;

# stop all containers
stop)
  docker-compose -f $COMPOSE_FILE stop $OPTIONS
  ;;

# install node packages, execute migrations and seeds (it will remove existing data)
setup-server)
  docker-compose -f $COMPOSE_FILE run --rm bcndev-server sh -c "yarn && yarn schema:drop && yarn migration:run && yarn task:seed"
  ;;

# install node packages, execute migrations and seeds (it will remove existing data)
setup-web)
  docker-compose -f $COMPOSE_FILE run --rm --no-deps bcndev-web yarn
  ;;

# remove all containers, images and volumes (data)
prune)
  docker container rm bcndev-server bcndev-web bcndev-postgres bcndev-mailcatcher
  docker volume rm bcndev-postgres-data
  docker rmi bcndev-server bcndev-web
  ;;

# execute shell command on the server container (enter shell by default)
shell-server)
  SH_CMD="${OPTIONS:-sh}"
  docker exec -it bcndev-server $SH_CMD
  ;;

# execute shell command on the web container (enter shell by default)
shell-web)
  SH_CMD="${OPTIONS:-sh}"
  docker exec -it bcndev-web $SH_CMD
  ;;

# backup all volumes
backup)
  for volume in "${VOLUMES[@]}"
  do
    file=$DUMPS_DIR/"${volume}".tar.bz2
    echo "Saving ${volume}..."
    docker run -v "${volume}":/volume --rm loomchild/volume-backup backup - > "${file}"
  done
  ;;

# restore all volumes from backup files
restore)
  for volume in "${VOLUMES[@]}"
  do
    file=$DUMPS_DIR/"${volume}".tar.bz2
    if [ -f "${file}" ]; then
      echo "Restoring ${volume}..."
      cat "${file}" | docker run -i -v "${volume}":/volume --rm loomchild/volume-backup restore -
    fi
  done
  ;;

*) echo "Invalid '$1' command"
  ;;
esac

